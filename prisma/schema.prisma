// Model Categories

model Categories {
  id          String          @id @default(uuid())
  name        String
  description String?
  created_at  DateTime        @default(now())
  updated_at  DateTime        @default(now()) @updatedAt
  
  // Relación con subcategorías
  Subcategories Subcategories[]
}// Model Favorites

model Favorites {
  id         String   @id @default(uuid())
  user       Users    @relation(fields: [user_id], references: [id])
  user_id    String
  item       Items    @relation(fields: [item_id], references: [id])
  item_id    String
  created_at DateTime @default(now())

  @@unique([user_id, item_id])
  @@index([user_id])
  @@index([item_id])
}// files

model Files {
  id            String   @id @default(uuid())
  user          Users    @relation(fields: [user_id], references: [id])
  user_id       String
  original_name String
  name          String
  path          String
  resource_type String
  created_at    DateTime @default(now())
  updated_at    DateTime @default(now()) @updatedAt
}
// items

model Items {
  id          String    @id @default(uuid())
  name        String
  description String?
  price       Decimal   @default(0.00) @db.Decimal(10, 2)
  image       String?
  created_at  DateTime  @default(now())
  updated_at  DateTime  @default(now()) @updatedAt
  provider_id String
  provider    Providers @relation(fields: [provider_id], references: [id])

  id_subcategory  String?
  subcategory     Subcategories? @relation(fields: [id_subcategory], references: [id])

  Favorites Favorites[]
}
// Model Plans

model Plans {
  id          String      @id @default(uuid())
  name        String
  description String
  price       Float
  plan_key    String      @unique
  created_at  DateTime    @default(now())
  updated_at  DateTime    @default(now()) @updatedAt
  Providers   Providers[]
}
// Model Providers

model Providers {
  id                  String   @id @default(uuid())
  name                String
  email               String   @unique
  rut                 String
  identification      String
  identification_type String
  chamber_commerce    String
  created_at          DateTime @default(now())
  updated_at          DateTime @default(now()) @updatedAt
  plan                Plans    @relation(fields: [plan_id], references: [id])
  plan_id             String
  // Add a relation to the Users model
  user                Users    @relation(fields: [user_id], references: [id])
  user_id             String   @unique
  Items               Items[]

  @@index([email, created_at(sort: Desc)])
}
// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["prismaSchemaFolder"]
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}
// Model Subcategories

model Subcategories {
  id            String      @id @default(uuid())
  name          String
  description   String?
  id_category   String
  category      Categories  @relation(fields: [id_category], references: [id])
  created_at    DateTime    @default(now())
  updated_at    DateTime    @default(now()) @updatedAt
  
  // Relación con items
  Items Items[]
}//Model Users

model Users {
  id                  String      @id @default(uuid())
  name                String
  email               String      @unique
  password            String
  user_type           String
  identification      String
  identification_type String
  refreshed_token     String?
  created_at          DateTime    @default(now())
  updated_at          DateTime    @default(now()) @updatedAt
  Provider           Providers?

  Files Files[]
  Favorites Favorites[]
}
